name: ENV Variables
on: push
env: 
  WF_ENV: ${{secrets.WF_ENV}}
jobs:
  decrypt-secret-file: 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Decrypt file
        run: gpg --quiet --batch --yes --decrypt --passphrase=$SECRET_PASS_PHRASE --output ./secrets/secret.json ./secrets/secret.json.gpg
        env:
          SECRET_PASS_PHRASE: ${{ secrets.SECRET_PASS_PHRASE }}
      - name: print-secret-file
        run: | 
          cat ./secrets/secret.json
          rm ./secrets/secret.json
  log-env:
    runs-on: ubuntu-latest
    env: 
      JOB_ENV: Available to all steps in log-env job.
    steps:
      - name: Log ENV Variables
        env: 
          STEP_ENV: Available to Log ENV Variables step within log-env job
        run: |
          echo "WF_ENV: ${WF_ENV}"
          echo "JOB_ENV: ${JOB_ENV}"
          echo "STEP_ENV: ${STEP_ENV}"
      - name: Log ENV 2
        run: |
          echo "WF_ENV: ${WF_ENV}"
          echo "JOB_ENV: ${JOB_ENV}"
          echo "STEP_ENV: ${STEP_ENV}"
  log-default-github-envs:
    runs-on: ubuntu-latest
    steps:
      - name: Log Default GitHub ENVS
        run: | 
          echo "HOME: ${HOME}"
          echo "GITHUB_WORKFLOW: ${GITHUB_WORKFLOW}"
          echo "GITHUB_ACTION: ${GITHUB_WORKFLOW}"
          echo "GITHUB_ACTIONS: ${GITHUB_ACTIONS}"
          echo "GITHUB_ACTOR: ${GITHUB_ACTOR}"
          echo "GITHUB_REPOSITORY: ${GITHUB_REPOSITORY}"
          echo "GITHUB_EVENT_NAME: ${GITHUB_EVENT_NAME}"
          echo "GITHUB_WORKSPACE: ${GITHUB_WORKSPACE}"
          echo "GITHUB_SHA: ${GITHUB_SHA}"
          echo "GITHUB_REF: ${GITHUB_REF}"
          echo "WF_ENV: ${WF_ENV}"
          echo "JOB_ENV: ${JOB_ENV}"
          echo "STEP_ENV: ${STEP_ENV}"
  # create_issue:
  #   runs-on: ubuntu-latest 
  #   steps:
  #     - name: Create and commit random File
  #       run: |
  #         pwd
  #         ls -al 
  #         git config --global init.defaultBranch main
  #         git init
  #         git remote add origin "https://lionelrrivas:${{ secrets.GITHUB_TOKEN }}@github.com/lionelrrivas/github-actions-demo.git"
  #         git config --global user.email "my-bot@bot.com"
  #         git config --global user.name "my-bot"
  #         git fetch 
  #         git checkout main
  #         git branch --set-upstream-to=origin/main
  #         git pull 
  #         ls -al 
  #         echo $RANDOM >> random.txt
  #         ls -al 
  #         git add -A
  #         git commit -m "creating random file"
  #         git push
  #     - name: Create issue using REST API
  #       run: |
  #         curl --request POST \
  #         --url https://api.github.com/repos/${{ github.repository }}/issues \
  #         --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
  #         --header 'content-type: application/json' \
  #         --data '{
  #           "title": "Automated issue for commit: ${{ github.sha }}",
  #           "body": "This issue was automatically created by the GitHub Action workflow **${{ github.workflow }}**. \n\n The commit hash was: _${{ github.sha }}_."
  #           }' \
  #         --fail